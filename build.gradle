plugins {
	id 'java'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'maven-publish'
	id 'signing'
}

group = 'io.github.koushikruidas'
//artifactId = "log-analyzer-client"
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	withJavadocJar()
	withSourcesJar()
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:3.4.3'
	implementation 'org.apache.logging.log4j:log4j-core:2.24.3'

	compileOnly 'org.projectlombok:lombok:1.18.30'  // Added explicit version
	annotationProcessor 'org.projectlombok:lombok:1.18.30' // Added explicit version
}

// Ensure the JAR is created instead of a Spring Boot executable JAR
jar {
	enabled = true
}

publishing {
	publications {
		mavenJava(MavenPublication) { publication ->
			from components.java // Explicit type inference

			pom {
				name = 'Log Analyzer Client'
				description = 'A client library for analyzing logs'
				url = 'https://github.com/koushikruidas/log-analyzer-client'

				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id = 'koushikruidas'
						name = 'Koushik Ruidas'
						email = 'koushikruidas@gmail.com'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/koushikruidas/log-analyzer-client.git'
					developerConnection = 'scm:git:ssh://github.com/koushikruidas/log-analyzer-client.git'
					url = 'https://github.com/koushikruidas/log-analyzer-client'
				}
			}
		}
	}
	/**
	 * To publish to Maven Central (default): ./gradlew publish
	 * To publish to GitHub Packages: ./gradlew publish -PtargetRepo=github -Pgpr.user=<your-github-username> -Pgpr.key=<your-github-token>
	 * if you added gpr.user and gpr.key properties in gradle.properties file, you can skip passing them in command line.
	 * and only run: ./gradlew publish -PtargetRepo=github
	 * */
	repositories {
		if (project.hasProperty("targetRepo") && project.targetRepo == "github") {
			maven {
				name = "GitHubPackages"
				url = uri("https://maven.pkg.github.com/koushikruidas/log-analyzer-client")
				credentials {
					username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
					password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
				}
			}
		} else {
			maven {
				name = "OSSRH"
				url = uri("https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/")
				credentials {
					username = project.findProperty("ossrhUsername")
					password = project.findProperty("ossrhPassword")
				}
			}
		}
	}
}

signing {
	useGpgCmd() // OR useInMemoryPgpKeys(keyId, key, pass) if you prefer Gradle-style in-memory keys
	sign publishing.publications.mavenJava
}
